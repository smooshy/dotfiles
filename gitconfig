[user]
	email = stan.rawrysz@socrata.com
	name = Stan Rawrysz
[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
[alias]
    st = status
    ci = commit
    co = checkout
    br = branch
    push-change = "!bash -c ' \
        local_ref=$(git symbolic-ref HEAD); \
        local_name=${local_ref##refs/heads/}; \
        remote=$(git config branch.\"$local_name\".remote || echo origin); \
        remote_ref=$(git config branch.\"$local_name\".merge); \
        remote_name=${remote_ref##refs/heads/}; \
        remote_review_ref=\"refs/for/$remote_name\"; \
        r=\"\"; \
          if [[ $0 != \"\" && $0 != \"bash\" ]]; then r=\"--reviewer=$0\"; fi; \
          if [[ $1 != \"\" ]]; then r=\"$r --reviewer=$1\"; fi; \
          if [[ $2 != \"\" ]]; then r=\"$r --reviewer=$2\"; fi; \
          if [[ $3 != \"\" ]]; then r=\"$r --reviewer=$3\"; fi; \
          if [[ $4 != \"\" ]]; then r=\"$r --reviewer=$4\"; fi; \
            git push --receive-pack=\"gerrit receive-pack $r\" $remote HEAD:$remote_review_ref'"
        
    # for cherry-picking a merge
    cherry-pick-merge = "!bash -c 'git cherry-pick -n -m 1 $0 && \
      git log -1 --pretty=%P $0 | cut -b 42- > .git/MERGE_HEAD && \
      git commit -v'" 

    # given a symbolic ref, will give you the hash
    # use like 'git resolve-ref HEAD^^'
    resolve-ref = log -1 --pretty=format:%H

    # use like 'git cherry-pick $(git changeset 9404 1)' to cherry-pick
    # gerrit changeset 9404 patchset 1
    changeset = "!bash -c ' \
      git fetch $(git config remote.$(git this-remote).url) \
                refs/changes/${0: -2}/$0/$1; \
      git resolve-ref FETCH_HEAD'" 

    # will tell you your current branch's remote name
    this-remote = "!bash -c ' \
      local_ref=$(git symbolic-ref HEAD); \
      local_name=${local_ref##refs/heads/}; \
      echo $(git config branch.\"#local_name\".remote || echo origin)'" 

    # will tell you the local ref of the remote branch tip you're tracking
    remote-ref = "!bash -c ' \
      local_ref=$(git symbolic-ref HEAD); \
      local_name=${local_ref##refs/heads/}; \
      remote=$(git config branch.\"#local_name\".remote || echo origin); \
      remote_ref=$(git config branch.\"$local_name\".merge); \
      remote_name=${remote_ref##refs/heads/}; \
      echo remotes/$remote/$remote_name'" 

    # common interactive rebase operation
    rebase-recent = !git rebase -i $(git merge-base HEAD $(git remote-ref))

    # nice graphical log output
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
[push]
	default = simple
[core]
	editor = /usr/bin/vim
